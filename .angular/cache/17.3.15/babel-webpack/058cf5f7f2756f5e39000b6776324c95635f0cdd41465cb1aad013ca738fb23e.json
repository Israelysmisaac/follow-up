{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/customer.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"opacity-50 cursor-not-allowed\": a0\n});\nfunction CustomerFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \" Contact information is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CustomerFormComponent {\n  constructor(fb, customerService, route, router) {\n    this.fb = fb;\n    this.customerService = customerService;\n    this.route = route;\n    this.router = router;\n    this.isEditMode = false;\n    this.customerId = null;\n    this.customerForm = this.fb.group({\n      name: ['', Validators.required],\n      contactInfo: ['', Validators.required],\n      lastVisitDate: [new Date(), Validators.required],\n      nextFollowupDate: [new Date(), Validators.required],\n      notes: ['']\n    });\n  }\n  ngOnInit() {\n    this.customerId = this.route.snapshot.paramMap.get('id');\n    this.isEditMode = !!this.customerId;\n    if (this.isEditMode && this.customerId) {\n      const customer = this.customerService.getCustomerById(this.customerId);\n      if (customer) {\n        // Format dates for input type date\n        const formatDate = date => {\n          const d = new Date(date);\n          return d.toISOString().split('T')[0];\n        };\n        this.customerForm.patchValue({\n          name: customer.name,\n          contactInfo: customer.contactInfo,\n          lastVisitDate: formatDate(customer.lastVisitDate),\n          nextFollowupDate: formatDate(customer.nextFollowupDate),\n          notes: customer.notes\n        });\n      }\n    }\n  }\n  onSubmit() {\n    if (this.customerForm.invalid) {\n      return;\n    }\n    const formValues = this.customerForm.value;\n    if (this.isEditMode && this.customerId) {\n      this.customerService.updateCustomer({\n        id: this.customerId,\n        ...formValues,\n        lastVisitDate: new Date(formValues.lastVisitDate),\n        nextFollowupDate: new Date(formValues.nextFollowupDate)\n      });\n    } else {\n      this.customerService.addCustomer({\n        ...formValues,\n        lastVisitDate: new Date(formValues.lastVisitDate),\n        nextFollowupDate: new Date(formValues.nextFollowupDate)\n      });\n    }\n    this.router.navigate(['/customers']);\n  }\n  setFollowupDate(days) {\n    const nextDate = new Date();\n    nextDate.setDate(nextDate.getDate() + days);\n    // Format date for input field\n    const formattedDate = nextDate.toISOString().split('T')[0];\n    this.customerForm.patchValue({\n      nextFollowupDate: formattedDate\n    });\n  }\n  static {\n    this.ɵfac = function CustomerFormComponent_Factory(t) {\n      return new (t || CustomerFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CustomerFormComponent,\n      selectors: [[\"app-customer-form\"]],\n      decls: 46,\n      vars: 9,\n      consts: [[1, \"max-w-3xl\", \"mx-auto\", \"bg-white\", \"shadow\", \"overflow-hidden\", \"sm:rounded-lg\"], [1, \"px-4\", \"py-5\", \"sm:px-6\"], [1, \"text-2xl\", \"font-bold\", \"leading-7\", \"text-gray-900\"], [1, \"border-t\", \"border-gray-200\"], [1, \"px-4\", \"py-5\", \"sm:p-6\", 3, \"ngSubmit\", \"formGroup\"], [1, \"grid\", \"grid-cols-1\", \"gap-y-6\", \"gap-x-4\", \"sm:grid-cols-6\"], [1, \"sm:col-span-3\"], [\"for\", \"name\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [1, \"mt-1\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"shadow-sm\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"sm:text-sm\", \"border-gray-300\", \"rounded-md\"], [\"class\", \"text-red-500 text-xs mt-1\", 4, \"ngIf\"], [\"for\", \"contactInfo\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"text\", \"id\", \"contactInfo\", \"formControlName\", \"contactInfo\", 1, \"shadow-sm\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"sm:text-sm\", \"border-gray-300\", \"rounded-md\"], [\"for\", \"lastVisitDate\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"date\", \"id\", \"lastVisitDate\", \"formControlName\", \"lastVisitDate\", 1, \"shadow-sm\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"sm:text-sm\", \"border-gray-300\", \"rounded-md\"], [\"for\", \"nextFollowupDate\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"date\", \"id\", \"nextFollowupDate\", \"formControlName\", \"nextFollowupDate\", 1, \"shadow-sm\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"sm:text-sm\", \"border-gray-300\", \"rounded-md\"], [1, \"mt-2\", \"flex\", \"space-x-2\"], [\"type\", \"button\", 1, \"inline-flex\", \"items-center\", \"px-2.5\", \"py-1.5\", \"border\", \"border-transparent\", \"text-xs\", \"font-medium\", \"rounded\", \"text-white\", \"bg-blue-600\", \"hover:bg-blue-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-blue-500\", 3, \"click\"], [\"type\", \"button\", 1, \"inline-flex\", \"items-center\", \"px-2.5\", \"py-1.5\", \"border\", \"border-transparent\", \"text-xs\", \"font-medium\", \"rounded\", \"text-white\", \"bg-green-600\", \"hover:bg-green-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-green-500\", 3, \"click\"], [\"type\", \"button\", 1, \"inline-flex\", \"items-center\", \"px-2.5\", \"py-1.5\", \"border\", \"border-transparent\", \"text-xs\", \"font-medium\", \"rounded\", \"text-white\", \"bg-purple-600\", \"hover:bg-purple-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-purple-500\", 3, \"click\"], [1, \"sm:col-span-6\"], [\"for\", \"notes\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"id\", \"notes\", \"formControlName\", \"notes\", \"rows\", \"3\", 1, \"shadow-sm\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"sm:text-sm\", \"border\", \"border-gray-300\", \"rounded-md\"], [1, \"mt-6\", \"flex\", \"justify-end\", \"space-x-3\"], [\"type\", \"button\", \"routerLink\", \"/customers\", 1, \"inline-flex\", \"items-center\", \"px-4\", \"py-2\", \"border\", \"border-gray-300\", \"shadow-sm\", \"text-sm\", \"font-medium\", \"rounded-md\", \"text-gray-700\", \"bg-white\", \"hover:bg-gray-50\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-blue-500\"], [\"type\", \"submit\", 1, \"inline-flex\", \"justify-center\", \"py-2\", \"px-4\", \"border\", \"border-transparent\", \"shadow-sm\", \"text-sm\", \"font-medium\", \"rounded-md\", \"text-white\", \"bg-blue-600\", \"hover:bg-blue-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-blue-500\", 3, \"disabled\", \"ngClass\"], [1, \"text-red-500\", \"text-xs\", \"mt-1\"]],\n      template: function CustomerFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function CustomerFormComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n          i0.ɵɵtext(9, \"Customer Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 8);\n          i0.ɵɵelement(11, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, CustomerFormComponent_div_12_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\", 11);\n          i0.ɵɵtext(15, \"Contact Information\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 8);\n          i0.ɵɵelement(17, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, CustomerFormComponent_div_18_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 13);\n          i0.ɵɵtext(21, \"Last Visit Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 8);\n          i0.ɵɵelement(23, \"input\", 14);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"div\", 6)(25, \"label\", 15);\n          i0.ɵɵtext(26, \"Next Follow-up Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 8);\n          i0.ɵɵelement(28, \"input\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 17)(30, \"button\", 18);\n          i0.ɵɵlistener(\"click\", function CustomerFormComponent_Template_button_click_30_listener() {\n            return ctx.setFollowupDate(7);\n          });\n          i0.ɵɵtext(31, \" +7 Days \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"button\", 19);\n          i0.ɵɵlistener(\"click\", function CustomerFormComponent_Template_button_click_32_listener() {\n            return ctx.setFollowupDate(14);\n          });\n          i0.ɵɵtext(33, \" +14 Days \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function CustomerFormComponent_Template_button_click_34_listener() {\n            return ctx.setFollowupDate(30);\n          });\n          i0.ɵɵtext(35, \" +1 Month \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(36, \"div\", 21)(37, \"label\", 22);\n          i0.ɵɵtext(38, \"Notes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"div\", 8);\n          i0.ɵɵelement(40, \"textarea\", 23);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(41, \"div\", 24)(42, \"button\", 25);\n          i0.ɵɵtext(43, \" Cancel \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"button\", 26);\n          i0.ɵɵtext(45);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Edit Customer\" : \"Add New Customer\", \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.customerForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.customerForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.customerForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.customerForm.get(\"contactInfo\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.customerForm.get(\"contactInfo\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(26);\n          i0.ɵɵproperty(\"disabled\", ctx.customerForm.invalid)(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.customerForm.invalid));\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Save\", \" \");\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n      styles: [\"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4QkFBOEIiLCJmaWxlIjoiY3VzdG9tZXItZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQ29tcG9uZW50LXNwZWNpZmljIHN0eWxlcyAqLyJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXItZm9ybS9jdXN0b21lci1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEJBQThCO0FBQzlCLHdTQUF3UyIsInNvdXJjZXNDb250ZW50IjpbIi8qIENvbXBvbmVudC1zcGVjaWZpYyBzdHlsZXMgKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CustomerFormComponent","constructor","fb","customerService","route","router","isEditMode","customerId","customerForm","group","name","required","contactInfo","lastVisitDate","Date","nextFollowupDate","notes","ngOnInit","snapshot","paramMap","get","customer","getCustomerById","formatDate","date","d","toISOString","split","patchValue","onSubmit","invalid","formValues","value","updateCustomer","id","addCustomer","navigate","setFollowupDate","days","nextDate","setDate","getDate","formattedDate","ɵɵdirectiveInject","i1","FormBuilder","i2","CustomerService","i3","ActivatedRoute","Router","selectors","decls","vars","consts","template","CustomerFormComponent_Template","rf","ctx","ɵɵlistener","CustomerFormComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵtemplate","CustomerFormComponent_div_12_Template","CustomerFormComponent_div_18_Template","CustomerFormComponent_Template_button_click_30_listener","CustomerFormComponent_Template_button_click_32_listener","CustomerFormComponent_Template_button_click_34_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty","tmp_2_0","touched","tmp_3_0","ɵɵpureFunction1","_c0"],"sources":["/Volumes/LenovoPS8/projects/hide-demo/customer-followup/src/app/customer-form/customer-form.component.ts","/Volumes/LenovoPS8/projects/hide-demo/customer-followup/src/app/customer-form/customer-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustomerService, Customer } from '../services/customer.service';\n\n@Component({\n  selector: 'app-customer-form',\n  templateUrl: './customer-form.component.html',\n  styleUrls: ['./customer-form.component.css']\n})\nexport class CustomerFormComponent implements OnInit {\n  customerForm: FormGroup;\n  isEditMode = false;\n  customerId: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private customerService: CustomerService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.customerForm = this.fb.group({\n      name: ['', Validators.required],\n      contactInfo: ['', Validators.required],\n      lastVisitDate: [new Date(), Validators.required],\n      nextFollowupDate: [new Date(), Validators.required],\n      notes: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    this.customerId = this.route.snapshot.paramMap.get('id');\n    this.isEditMode = !!this.customerId;\n    \n    if (this.isEditMode && this.customerId) {\n      const customer = this.customerService.getCustomerById(this.customerId);\n      if (customer) {\n        // Format dates for input type date\n        const formatDate = (date: Date) => {\n          const d = new Date(date);\n          return d.toISOString().split('T')[0];\n        };\n        \n        this.customerForm.patchValue({\n          name: customer.name,\n          contactInfo: customer.contactInfo,\n          lastVisitDate: formatDate(customer.lastVisitDate),\n          nextFollowupDate: formatDate(customer.nextFollowupDate),\n          notes: customer.notes\n        });\n      }\n    }\n  }\n\n  onSubmit(): void {\n    if (this.customerForm.invalid) {\n      return;\n    }\n\n    const formValues = this.customerForm.value;\n    \n    if (this.isEditMode && this.customerId) {\n      this.customerService.updateCustomer({\n        id: this.customerId,\n        ...formValues,\n        lastVisitDate: new Date(formValues.lastVisitDate),\n        nextFollowupDate: new Date(formValues.nextFollowupDate)\n      });\n    } else {\n      this.customerService.addCustomer({\n        ...formValues,\n        lastVisitDate: new Date(formValues.lastVisitDate),\n        nextFollowupDate: new Date(formValues.nextFollowupDate)\n      });\n    }\n    \n    this.router.navigate(['/customers']);\n  }\n\n  setFollowupDate(days: number): void {\n    const nextDate = new Date();\n    nextDate.setDate(nextDate.getDate() + days);\n    \n    // Format date for input field\n    const formattedDate = nextDate.toISOString().split('T')[0];\n    this.customerForm.patchValue({ nextFollowupDate: formattedDate });\n  }\n}","<div class=\"max-w-3xl mx-auto bg-white shadow overflow-hidden sm:rounded-lg\">\n  <div class=\"px-4 py-5 sm:px-6\">\n    <h2 class=\"text-2xl font-bold leading-7 text-gray-900\">\n      {{ isEditMode ? 'Edit Customer' : 'Add New Customer' }}\n    </h2>\n  </div>\n  \n  <div class=\"border-t border-gray-200\">\n    <form [formGroup]=\"customerForm\" (ngSubmit)=\"onSubmit()\" class=\"px-4 py-5 sm:p-6\">\n      <div class=\"grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6\">\n        <!-- Name Field -->\n        <div class=\"sm:col-span-3\">\n          <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">Customer Name</label>\n          <div class=\"mt-1\">\n            <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md\">\n          </div>\n          <div *ngIf=\"customerForm.get('name')?.invalid && customerForm.get('name')?.touched\" class=\"text-red-500 text-xs mt-1\">\n            Name is required\n          </div>\n        </div>\n\n        <!-- Contact Info Field -->\n        <div class=\"sm:col-span-3\">\n          <label for=\"contactInfo\" class=\"block text-sm font-medium text-gray-700\">Contact Information</label>\n          <div class=\"mt-1\">\n            <input type=\"text\" id=\"contactInfo\" formControlName=\"contactInfo\" class=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md\">\n          </div>\n          <div *ngIf=\"customerForm.get('contactInfo')?.invalid && customerForm.get('contactInfo')?.touched\" class=\"text-red-500 text-xs mt-1\">\n            Contact information is required\n          </div>\n        </div>\n\n        <!-- Last Visit Date Field -->\n        <div class=\"sm:col-span-3\">\n          <label for=\"lastVisitDate\" class=\"block text-sm font-medium text-gray-700\">Last Visit Date</label>\n          <div class=\"mt-1\">\n            <input type=\"date\" id=\"lastVisitDate\" formControlName=\"lastVisitDate\" class=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md\">\n          </div>\n        </div>\n\n        <!-- Next Followup Date Field -->\n        <div class=\"sm:col-span-3\">\n          <label for=\"nextFollowupDate\" class=\"block text-sm font-medium text-gray-700\">Next Follow-up Date</label>\n          <div class=\"mt-1\">\n            <input type=\"date\" id=\"nextFollowupDate\" formControlName=\"nextFollowupDate\" class=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md\">\n          </div>\n          <div class=\"mt-2 flex space-x-2\">\n            <button type=\"button\" (click)=\"setFollowupDate(7)\" class=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n              +7 Days\n            </button>\n            <button type=\"button\" (click)=\"setFollowupDate(14)\" class=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\">\n              +14 Days\n            </button>\n            <button type=\"button\" (click)=\"setFollowupDate(30)\" class=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\">\n              +1 Month\n            </button>\n          </div>\n        </div>\n\n        <!-- Notes Field -->\n        <div class=\"sm:col-span-6\">\n          <label for=\"notes\" class=\"block text-sm font-medium text-gray-700\">Notes</label>\n          <div class=\"mt-1\">\n            <textarea id=\"notes\" formControlName=\"notes\" rows=\"3\" class=\"shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border border-gray-300 rounded-md\"></textarea>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"mt-6 flex justify-end space-x-3\">\n        <button type=\"button\" routerLink=\"/customers\" class=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n          Cancel\n        </button>\n        <button type=\"submit\" [disabled]=\"customerForm.invalid\" class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\" [ngClass]=\"{'opacity-50 cursor-not-allowed': customerForm.invalid}\">\n          {{ isEditMode ? 'Update' : 'Save' }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}